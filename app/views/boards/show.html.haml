= link_to user_dashboard_path do
  %i.glyphicon.glyphicon-circle-arrow-left
  Back to dashboard
%h2
  = @board.title
  = link_to board_mark_path(@board), method: :put, class: 'btn' do
    - if @board.marked?
      %i.glyphicon.glyphicon-star
    - else
      %i.glyphicon.glyphicon-star-empty
= link_to show_archivised_board_path(@board), class: 'btn btn-primary btn-xs' do
  Project archive
= link_to board_path(@board), method: :delete, confirm: 'Are you sure?', class: 'btn btn-danger btn-xs' do
  Delete this board
  %i.glyphicon.glyphicon-trash
.box
  .project-members
    %h3
      %i.icon.ion-person-stalker
      Members:
    %ul
      - @board.users.each do |user|
        %li
          = user.email
          %a.text-danger{ href: '#' }
            %i.icon.ion-minus-circled
    %h4
      = link_to '#' do
        Invite
        %i.icon.ion-person-add
  %h3
    %i.icon.ion-clipboard
    Task lists:
  .board-acionts
    %h4
      %a{ href: '#', data: { target: "#addList", toggle: "modal" }}
        Add list
        %i.icon.ion-plus-circled
  %ul#lists_container.list-inline
    - @lists.each do |list|
      - if list
        %li.ui-state-default.list-item-wrap{ data: { id: list.id } }= render 'list', list: list
  =render 'add_file_modal'

:coffee
  $ ->

    $("#lists_container").sortable(
      placeholder: "ui-state-highlight"
      update: (event, ui) ->
        idArray = []
        $('.list-item-wrap').each (index, el) ->
          idArray.push $(el).data 'id'
        $.ajax
          type: 'PUT'
          url: "#{ board_path }.json"
          dataType: 'JSON'
          data:
            board:
              list_order: idArray

    )
    $("#lists_container").disableSelection()
